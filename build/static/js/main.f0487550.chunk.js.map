{"version":3,"sources":["services/phonebook.js","components/error.js","App.js","index.js"],"names":["axios","get","then","response","data","newNumber","post","id","put","Notification","message","className","App","props","useState","name","number","persons","setPersons","newName","setNewName","setNewNumber","newSearch","setNewSearch","filterSwitch","setFilterSwitch","errorMessage","setErrorMessage","useEffect","phoneService","personsToShow","filter","element","toLowerCase","includes","removeNumber","person","window","confirm","delete","p","catch","error","setTimeout","n","value","onChange","event","target","onClick","onSubmit","preventDefault","newPhoneNumber","length","isThereDuplicate","find","console","log","undefined","concat","changedNumber","returnedValue","map","note","e","type","key","bind","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0487550.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = \"api/persons\"\n\n\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\n\nconst create = (newNumber) => {\n  const request = axios.post(baseUrl, newNumber)\n  return request.then(response => response.data)\n}\n\n\nconst update = (id, newNumber) => {\n  const request = axios.put(`${baseUrl}/${id}`, newNumber)\n  return request.then(response => response.data)\n}\n\n\n\n\n\nexport default {getAll, create, update}\n","import React from 'react'\n\n\nconst Notification = ({message}) => {\n  if(message === null) {\n    return null\n  }\n\n  return (<div className=\"error\">\n\n    {message}\n\n   </div> )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport phoneService from './services/phonebook.js'\nimport './index.css'\nimport Notification from './components/error.js'\n\n\nconst App = (props) => {\n  const [ persons, setPersons ] = useState([\n    { name: 'Arto Hellas', id: 1, number: '0874833394'}\n  ])\n  const [ newName, setNewName ] = useState('')\n\n  const [newNumber, setNewNumber] = useState('')\n\n  const [newSearch, setNewSearch] = useState('')\n\n  const [filterSwitch, setFilterSwitch] = useState(true)\n\n  const [errorMessage, setErrorMessage] = useState('some error...')\n\n\n\n\n  const data = () => {\n    phoneService.getAll()\n     .then(response => {\n       setPersons(response)\n     })\n  }\n\n  useEffect( data ,[])\n\n  const personsToShow = filterSwitch? persons : persons.filter(element => element.name.toLowerCase().includes(newSearch.toLowerCase()))\n\n\n\n\n  const changeSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n\n  const changeForm = (event) => {\n\n    setNewName(event.target.value)\n  }\n\n  const changeNumber = (e) => {\n    setNewNumber(e.target.value)\n  }\n\nconst addNumber = (event) => {\n\n  event.preventDefault()\n\n  const newPhoneNumber = {name: newName, id: persons.length + 1, number: newNumber}\n\n  const isThereDuplicate = persons.find(element => element.name === newName)\n\n  console.log(isThereDuplicate)\n\n  if(isThereDuplicate === undefined ) {\n\n    phoneService.create(newPhoneNumber)\n      .then(response => {\n        setPersons(persons.concat(response))\n        setNewName('')\n         setNewNumber('')\n\n         setErrorMessage(`Added ${response.name}`)\n\n         setTimeout(() => {\n           setErrorMessage(null)\n         }, 5000)\n\n\n\n      })\n\n\n\n   }\n\n  else {\n\n    const changedNumber = { ...isThereDuplicate, number: newNumber}\n\n\n    phoneService.update(isThereDuplicate.id, changedNumber)\n      .then(returnedValue => {\n        console.log(returnedValue)\n        setPersons(persons.map(note => note.id !== isThereDuplicate.id ? note : returnedValue))\n      }).catch(error => {\n\n      setErrorMessage(` ${error.name} has already been removed from the server`)\n\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    setNewName('')\n    setNewNumber('')\n\n    setPersons(persons.filter(n => n.id !== isThereDuplicate.id))\n    })\n  }\n}\n\n\nconst removeNumber = (person) => {\n\n  const baseUrl = \"http://www.localhost:3001/persons\"\n\n\nif (window.confirm(`Are you sure you want to delete ${person.name}`)) {\n\n  axios.delete(`${baseUrl}/${person.id}`)\n    .then( () => {\nsetPersons(persons.filter(p => p.id !== person.id))\n}\n)\n.catch(error => {\n\nsetErrorMessage(` ${person.name} has already been removed from the server`)\n\nsetTimeout(() => {\n  setErrorMessage(null)\n}, 5000)\n\n\nsetPersons(persons.filter(n => n.id !== person.id))\n}) }\n}\n\n\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={errorMessage} />\n\n\n\n      Search: <input value={newSearch} onChange={changeSearch} />\n\n      <button onClick={()=> setFilterSwitch(!filterSwitch) }> </button>\n\n\n\n\n\n      <h3> Add a new </h3>\n\n\n\n      <form onSubmit={addNumber}>\n        <div>\n          name: <input value={newName} onChange={changeForm} />\n        </div>\n\n        <div> phone number: <input value={newNumber} onChange={changeNumber}/>   </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n\n      <ul>\n\n      {personsToShow.map(person => <li key={person.id}> {person.name} {person.number} <button onClick={removeNumber.bind(this,person)} > delete </button> </li>) }\n\n\n      </ul>\n\n\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\n  ReactDOM.render( <App/>,\n    document.getElementById('root')\n  );\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}